name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
      - overall_requirement_basecode

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r requirements.txt

        # https://docs.docker.com/build/ci/github-actions/: follow these
      - name: Build and push Docker images
        run: |
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          if [ "$GITHUB_EVENT_NAME" == "push" ]; then
            # Only build and push Docker image for pushes to the specified branch
            docker build -t ml-data-collection-service:${VERSION_TAG} --label "Simulates weekly sensor data collection and uploads to Google Cloud." -f dockerfiles/MultistageDockerfile .

            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKENS }}

            docker tag ml-data-collection-service:${VERSION_TAG} ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}

            docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}
          else
            echo "Skipping Docker image build for non-push events."
          fi

  deploy:
    needs: build_and_push_docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        #uses: docker-practice/actions-setup-docker@master
        # As suggested here:  https://github.com/marketplace/actions/setup-docker

      # - name: Set up Docker
      #   uses: docker/setup-buildx-action@v3

      #   name: Build and push
      #   uses: docker/build-push-action@v5
      #     with:
      #       context: .
      #       file: ./dockerfiles/MultistageDockerfile
      #       push: true

      - name: Run Docker container
        run: |

          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          docker run -d -p 8080:8080 --name ml-data-collection ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG} || true
