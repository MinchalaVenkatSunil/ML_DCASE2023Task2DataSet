# TODO:
# 1. Extend a base YAML template and override the parameters as necessary. Move the common tasks to the template.
# 2. Trigger the deployment changes in the template dynamically based on branch and specific path changes.
# 3. Use serverless functions to trigger a weekly schedule for data transfers.
#    - In Azure, we use Azure functions along with logic apps. Explore equivalent options in GCP.

name: CI/CD Pipeline

on:
  schedule:
    - cron: '30 5 * * 1' # Monday
    - cron: '30 5 * * 3' # Wednesday
    # The below are for testing
    # - cron: '50 11 * * *'
    # - cron: '55 11 * * *'

  push:
    branches:
      - main
      - master
      - overall_requirement_basecode
      - data_collection_transfer

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}

      - name: Build and push Docker images
        run: |
          # TODO: Move to env variables
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          # Build and push Docker image for data collection
          docker build -t ml-data-collection-service:${VERSION_TAG} \
            --label "Simulates weekly sensor data collection and uploads to Google Cloud." \
            -f dockerfiles/DatacollectionDockerFile .

          docker tag ml-data-collection-service:${VERSION_TAG} \
            ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}

          docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG}

          # Build and push Docker image for data transfer
          docker build -t ml-data-transfer-service:${VERSION_TAG} \
            --label "Transfers locally simulated data to Google Cloud Storage." \
            -f dockerfiles/DataTransferDockerFile .

          docker tag ml-data-transfer-service:${VERSION_TAG} \
            ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION_TAG}

          docker push ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION_TAG}

  data_collection:
    runs-on: ubuntu-latest
  
    needs: build
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}
  
      - name: Run Docker container for data collection
        if: github.event.schedule == '50 11 * * *'
        run: |
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"
  
          docker run -v ml-data-collection-data:/app/result ${{ secrets.DOCKER_USERNAME }}/ml-data-collection-service:${VERSION_TAG} || true
          
  data_transfer:
    runs-on: ubuntu-latest

    needs: data_collection  # Ensure the data collection job has completed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKENS }}

      - name: Run Docker container for data transfer
        if: github.event.schedule == '50 11 * * *'
        run: |
          VERSION=1.0.1
          BUILD_NUMBER=$GITHUB_RUN_NUMBER
          VERSION_TAG="$VERSION-$BUILD_NUMBER"

          docker run -v ml-data-collection-data:/app/result ${{ secrets.DOCKER_USERNAME }}/ml-data-transfer-service:${VERSION_TAG} || true
